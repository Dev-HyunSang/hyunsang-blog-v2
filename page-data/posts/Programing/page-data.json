{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Programing","result":{"pageContext":{"currentCategory":"Programing","categories":["All","Kubernetes","생각들","Golang","회고","Rust","Programing"],"edges":[{"node":{"id":"693d4dac-5a7f-52b3-97c5-703e57b6b91d","excerpt":"제가 예전부터 프로그래밍을 하면서 궁금했던 점이 있습니다. “과연 올바른 Code Structure(코드 구조화)는 무엇인가”는 무엇인가에 대해서 궁금증과 의문점이 드는 부분이 있어서 작성하게 되었습니다. 내가 생각하는 구조화는 저는 프로그래밍을 하면서 반복적인 코드 또는 다른 기능에서도 사용되는 코드(Ex. A,B를 만들면서 A를 먼저 만들며, A와 B를 함께 사용되는 코드가 있다면) 패키지를 만들어서 개발을 진행하고 있습니다. 하지만 여기서! 이것저것 패키지가 엮여있다면 코드 구조화가 되는 것이 아니라 코드르 더 복잡하게 만든다라고 생각합니다. 예전에 프로그래밍을 할 때에는 하나의 코드 파일에 다양한 함수를 만들어서 이것저것 만들어 보곤 했습니다. 프로그래밍을 하면서 항상 궁금했는데 과연 코드 구조가 복잡해지면 어떻게 해야할지, 그리고 복잡해지지 않기 위해서 어떻게 해야할지에 대해서 중점적으로 이야기 해 보고자 합니다. 잠깐만 코드를 구조화 시키기 전에 제가 코드를 구조화 시키…","fields":{"slug":"/consideration-of-code-structure/"},"frontmatter":{"categories":"Programing","title":"코드 구조화에 대한 고찰","date":"November 26, 2022"}},"next":{"fields":{"slug":"/golang-and-memory/"}},"previous":{"fields":{"slug":"/rust-error-solution/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}